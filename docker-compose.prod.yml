version: "3.3"
services:
  redis:
    container_name: coproduction-redis
    image: redis:6-alpine
    networks:
      - default

  coproduction:
    image: 'coproductionprod:${TAG-latest}'
    container_name: coproduction-prod
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      - PORT=${PORT}
      # Allow explicit env var override for tests
    build:
      context: .
      dockerfile: Dockerfile.coproduction
      target: apiprod
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.${STACK_NAME?Variable not set}-coproduction-http.rule=PathPrefix(`/coproduction`)
        - traefik.http.services.${STACK_NAME?Variable not set}-coproduction.loadbalancer.server.port=${PORT}
        - traefik.http.routers.${STACK_NAME?Variable not set}-coproduction-http.middlewares=coproduction-stripprefix
        - traefik.http.middlewares.coproduction-stripprefix.stripprefix.prefixes=/coproduction
    networks:
      - traefik-public
      - default

  coproductionworker:
    image: 'coproductionworkerprod:${TAG-latest}'
    container_name: coproductionworker-prod
    depends_on:
      - redis
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
    build:
      context: .
      dockerfile: Dockerfile.coproduction
      target: workerprod
    networks:
      - default

networks:
  traefik-public:
    external: true