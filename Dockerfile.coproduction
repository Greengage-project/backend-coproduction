FROM python:3.8 as builder
WORKDIR /app/

# Install Poetry
RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | POETRY_HOME=/opt/poetry python && \
    cd /usr/local/bin && \
    ln -s /opt/poetry/bin/poetry && \
    poetry config virtualenvs.create false

# Copy poetry.lock* in case it doesn't exist in the repo
COPY ./coproduction/pyproject.toml ./coproduction/poetry.lock* /app/

# Allow installing dev dependencies to run tests
ARG INSTALL_DEV=false
RUN bash -c "if [ $INSTALL_DEV == 'true' ] ; then poetry install --no-root ; else poetry install --no-root --no-dev ; fi"

COPY ./coproduction/app /app
ENV PYTHONPATH=/app

RUN pip install --no-cache-dir redis

## BACKEND
FROM builder as coproduction

RUN apt-get update \
  && apt-get install -y --no-install-recommends graphviz \
  && rm -rf /var/lib/apt/lists/* \
  && pip install --no-cache-dir pyparsing pydot sqlalchemy_schemadisplay

EXPOSE 80

COPY ./coproduction/start.sh ./start.sh
RUN chmod +x ./start.sh
CMD ["bash", "./start.sh"]

# CELERYWORKER
FROM builder as coproductionworker

ENV C_FORCE_ROOT=1

COPY  ./coproduction/worker-start.sh worker-start.sh
RUN chmod +x worker-start.sh
CMD ["bash", "./worker-start.sh"]