"""tree-items

Revision ID: aaa624b6ae0d
Revises: 
Create Date: 2022-05-26 12:47:50.587475

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'aaa624b6ae0d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coproductionprocess',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('language', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('logotype', sa.String(), nullable=True),
    sa.Column('aim', sa.Text(), nullable=True),
    sa.Column('idea', sa.Text(), nullable=True),
    sa.Column('organization', sa.Text(), nullable=True),
    sa.Column('challenges', sa.Text(), nullable=True),
    sa.Column('creator_id', sa.String(), nullable=True),
    sa.Column('default_role_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ondelete='SET NULL', use_alter=True),
    sa.ForeignKeyConstraint(['default_role_id'], ['role.id'], ondelete='SET NULL', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('logotype', sa.String(), nullable=True),
    sa.Column('creator_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ondelete='SET NULL', use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('association_user_team',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('team_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'team_id')
    )
    op.create_table('role',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('meta_editable', sa.Boolean(), nullable=True),
    sa.Column('perms_editable', sa.Boolean(), nullable=True),
    sa.Column('deletable', sa.Boolean(), nullable=True),
    sa.Column('selectable', sa.Boolean(), nullable=True),
    sa.Column('permissions', postgresql.ARRAY(sa.Enum('view_assets', 'create_assets', 'delete_assets', 'change_access', 'update_settings', name='permissions', native_enum=False)), nullable=True),
    sa.Column('coproductionprocess_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['coproductionprocess_id'], ['coproductionprocess.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('treeitem',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('creator_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('disabled', sa.Date(), nullable=True),
    sa.Column('type', sa.Enum('task', 'objective', 'phase', name='types', native_enum=False), nullable=True),
    sa.Column('coproductionprocess_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('parent_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('problemprofiles', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('status', sa.Enum('awaiting', 'in_progress', 'finished', name='status', native_enum=False), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['coproductionprocess_id'], ['coproductionprocess.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ondelete='SET NULL', use_alter=True),
    sa.ForeignKeyConstraint(['parent_id'], ['treeitem.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('asset',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('treeitem_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('coproductionprocess_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('creator_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['coproductionprocess_id'], ['coproductionprocess.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ondelete='SET NULL', use_alter=True),
    sa.ForeignKeyConstraint(['treeitem_id'], ['treeitem.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('association_team_role',
    sa.Column('team_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_id', 'role_id')
    )
    op.create_table('association_user_role',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('treeitem_prerequisites',
    sa.Column('treeitem_a_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('treeitem_b_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['treeitem_a_id'], ['treeitem.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['treeitem_b_id'], ['treeitem.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('treeitem_a_id', 'treeitem_b_id')
    )
    op.create_table('exception',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('asset_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('coproductionprocess_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('permission', sa.Enum('view_assets', 'create_assets', 'delete_assets', 'change_access', 'update_settings', name='permissions', native_enum=False), nullable=True),
    sa.Column('grant', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['coproductionprocess_id'], ['coproductionprocess.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('externalasset',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('icon_path', sa.String(), nullable=True),
    sa.Column('externalinterlinker_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('uri', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['asset.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('internalasset',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('external_asset_id', sa.String(), nullable=True),
    sa.Column('softwareinterlinker_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('knowledgeinterlinker_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['asset.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('internalasset')
    op.drop_table('externalasset')
    op.drop_table('exception')
    op.drop_table('treeitem_prerequisites')
    op.drop_table('association_user_role')
    op.drop_table('association_team_role')
    op.drop_table('asset')
    op.drop_table('treeitem')
    op.drop_table('role')
    op.drop_table('association_user_team')
    op.drop_table('user')
    op.drop_table('team')
    op.drop_table('coproductionprocess')
    # ### end Alembic commands ###
